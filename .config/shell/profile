#!/bin/sh
#    ██████╗ ██████╗  ██████╗ ███████╗██╗██╗     ███████╗
#    ██╔══██╗██╔══██╗██╔═══██╗██╔════╝██║██║     ██╔════╝
#    ██████╔╝██████╔╝██║   ██║█████╗  ██║██║     █████╗  
#    ██╔═══╝ ██╔══██╗██║   ██║██╔══╝  ██║██║     ██╔══╝  
# ██╗██║     ██║  ██║╚██████╔╝██║     ██║███████╗███████╗
# ╚═╝╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝╚══════╝

## XDG base directory
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

if test $TERMUX_VERSION; then
    export XDG_DOWNLOAD_DIR="$HOME/storage/downloads"
    export XDG_VIDEOS_DIR="$HOME/storage/movies"
    export XDG_MUSIC_DIR="$HOME/storage/music"
    export XDG_PICTURES_DIR="$HOME/storage/pictures"
    export XDG_PUBLICSHARE_DIR="$HOME/storage/shared"
else
    export XDG_DOWNLOAD_DIR="$HOME/Downloads"
    export XDG_VIDEOS_DIR="$HOME/Videos"
    export XDG_MUSIC_DIR="$HOME/Music"
    export XDG_PICTURES_DIR="$HOME/Pictures"
    export XDG_DOCUMENTS_DIR="$HOME/Documents"
    export XDG_PUBLICSHARE_DIR="$HOME/Public"
    export XDG_DESKTOP_DIR="$HOME/Desktop"
    export XDG_TEMPLATES_DIR="$HOME/Templates"
fi

## MY environments vars
export DOTFILES="$HOME/.dotfile.git"
export MY_SHELL="$(ps -p $$ -ocomm=)"
export MY_BIN="$HOME/bin"
export MY_LIB="$HOME/lib"
export MY_SRC="$HOME/.local/src"
export MY_BACKGROUND="light"
export MY_COLOR_CACHE_DIR="$XDG_CACHE_HOME/colorsync"
export MY_NOTES_DIR="$HOME/notes"

export PATH="$HOME/.local/bin:$PATH"
export PATH="$(echo $(find $MY_BIN -type d -printf %p:))$PATH"

## Default program
export TERM="${TERM:-xterm-256color}"
export EDITOR="nvim"
export VISUAL="nvim"
export MANPAGER='nvim +Man!'
# export MANWIDTH=999
export TERMINAL="kitty"
export GPG_TTY=$(tty)

if command -v firefox-nightly > /dev/null; then
  export BROWSER="firefox-nightly"
elif command -v firefox > /dev/null; then
  export BROWSER="firefox"
elif command -v brave > /dev/null; then
  export BROWSER="brave"
else
  export BROWSER="google-chrome-stable"
fi

## Home directory clean up
. ${XDG_CONFIG_HOME:-$HOME/.config}/shell/xdg_clean.profile
. ${XDG_CONFIG_HOME:-$HOME/.config}/shell/config.env

test -f $HOME/.profile.local && source $HOME/.profile.local

## Guix <https://guix.gnu.org/manual/en/html_node/Invoking-guix-package.html>
GUIX_PROFILE="$HOME/.guix-profile" ; \
test -f "$GUIX_PROFILE/etc/profile" && source "$GUIX_PROFILE/etc/profile"

[ -n "$BASH_VERSION" ] && [ -f ${XDG_CONFIG_HOME:-$HOME/.config}/bash/bashrc ] && source ${XDG_CONFIG_HOME:-$HOME/.config}/bash/bashrc

startx_y_or_n() {
  trap break SIGINT
  # exec startx
  while true; do
    printf "Do you want to start X server? (y/n): "
    read yn
    case $yn in
      [Yy]*) startx "$XINITRC" && break ;;
      [Nn]*) break ;;
      *) echo "(y/n) only";;
    esac
  done
  trap - SIGINT
}

if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then startx_y_or_n; fi

## End of file
